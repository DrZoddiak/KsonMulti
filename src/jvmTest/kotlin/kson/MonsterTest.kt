package kson

import kotlinx.coroutines.ExperimentalCoroutinesApi
import kotlinx.coroutines.test.runTest
import kson.models.Monsters
import org.junit.jupiter.api.Nested
import kotlin.test.Test
import kotlin.test.assertFails

val api get() = KsonApi(client)

@OptIn(ExperimentalCoroutinesApi::class)
class MonsterTest {
    private val monsters = listOf(
        "aboleth",
        "acolyte",
        "adult-black-dragon",
        "adult-blue-dragon",
        "adult-brass-dragon",
        "adult-bronze-dragon",
        "adult-copper-dragon",
        "adult-gold-dragon",
        "adult-green-dragon",
        "adult-red-dragon",
        "adult-silver-dragon",
        "adult-white-dragon",
        "air-elemental",
        "ancient-black-dragon",
        "ancient-blue-dragon",
        "ancient-brass-dragon",
        "ancient-bronze-dragon",
        "ancient-copper-dragon",
        "ancient-gold-dragon",
        "ancient-green-dragon",
        "ancient-red-dragon",
        "ancient-silver-dragon",
        "ancient-white-dragon",
        "androsphinx",
        "animated-armor",
        "ankheg",
        "ape",
        "archmage",
        "assassin",
        "awakened-shrub",
        "awakened-tree",
        "axe-beak",
        "azer",
        "baboon",
        "badger",
        "balor",
        "bandit",
        "bandit-captain",
        "barbed-devil",
        "basilisk",
        "bat",
        "bearded-devil",
        "behir",
        "berserker",
        "black-bear",
        "black-dragon-wyrmling",
        "black-pudding",
        "blink-dog",
        "blood-hawk",
        "blue-dragon-wyrmling",
        "boar",
        "bone-devil",
        "brass-dragon-wyrmling",
        "bronze-dragon-wyrmling",
        "brown-bear",
        "bugbear",
        "bulette",
        "camel",
        "cat",
        "centaur",
        "chain-devil",
        "chimera",
        "chuul",
        "clay-golem",
        "cloaker",
        "cloud-giant",
        "cockatrice",
        "commoner",
        "constrictor-snake",
        "copper-dragon-wyrmling",
        "couatl",
        "crab",
        "crocodile",
        "cult-fanatic",
        "cultist",
        "darkmantle",
        "death-dog",
        "deep-gnome-svirfneblin",
        "deer",
        "deva",
        "dire-wolf",
        "djinni",
        "doppelganger",
        "draft-horse",
        "dragon-turtle",
        "dretch",
        "drider",
        "drow",
        "druid",
        "dryad",
        "duergar",
        "dust-mephit",
        "eagle",
        "earth-elemental",
        "efreeti",
        "elephant",
        "elk",
        "erinyes",
        "ettercap",
        "ettin",
        "fire-elemental",
        "fire-giant",
        "flesh-golem",
        "flying-snake",
        "flying-sword",
        "frog",
        "frost-giant",
        "gargoyle",
        "gelatinous-cube",
        "ghast",
        "ghost",
        "ghoul",
        "giant-ape",
        "giant-badger",
        "giant-bat",
        "giant-boar",
        "giant-centipede",
        "giant-constrictor-snake",
        "giant-crab",
        "giant-crocodile",
        "giant-eagle",
        "giant-elk",
        "giant-fire-beetle",
        "giant-frog",
        "giant-goat",
        "giant-hyena",
        "giant-lizard",
        "giant-octopus",
        "giant-owl",
        "giant-poisonous-snake",
        "giant-rat",
        "giant-rat-diseased",
        "giant-scorpion",
        "giant-sea-horse",
        "giant-shark",
        "giant-spider",
        "giant-toad",
        "giant-vulture",
        "giant-wasp",
        "giant-weasel",
        "giant-wolf-spider",
        "gibbering-mouther",
        "glabrezu",
        "gladiator",
        "gnoll",
        "goat",
        "goblin",
        "gold-dragon-wyrmling",
        "gorgon",
        "gray-ooze",
        "green-dragon-wyrmling",
        "green-hag",
        "grick",
        "griffon",
        "grimlock",
        "guard",
        "guardian-naga",
        "gynosphinx",
        "half-red-dragon-veteran",
        "harpy",
        "hawk",
        "hell-hound",
        "hezrou",
        "hill-giant",
        "hippogriff",
        "hobgoblin",
        "homunculus",
        "horned-devil",
        "hunter-shark",
        "hydra",
        "hyena",
        "ice-devil",
        "ice-mephit",
        "imp",
        "invisible-stalker",
        "iron-golem",
        "jackal",
        "killer-whale",
        "knight",
        "kobold",
        "kraken",
        "lamia",
        "lemure",
        "lich",
        "lion",
        "lizard",
        "lizardfolk",
        "mage",
        "magma-mephit",
        "magmin",
        "mammoth",
        "manticore",
        "marilith",
        "mastiff",
        "medusa",
        "merfolk",
        "merrow",
        "mimic",
        "minotaur",
        "minotaur-skeleton",
        "mule",
        "mummy",
        "mummy-lord",
        "nalfeshnee",
        "night-hag",
        "nightmare",
        "noble",
        "ochre-jelly",
        "octopus",
        "ogre",
        "ogre-zombie",
        "oni",
        "orc",
        "otyugh",
        "owl",
        "owlbear",
        "panther",
        "pegasus",
        "phase-spider",
        "pit-fiend",
        "planetar",
        "plesiosaurus",
        "poisonous-snake",
        "polar-bear",
        "pony",
        "priest",
        "pseudodragon",
        "purple-worm",
        "quasit",
        "quipper",
        "rakshasa",
        "rat",
        "raven",
        "red-dragon-wyrmling",
        "reef-shark",
        "remorhaz",
        "rhinoceros",
        "riding-horse",
        "roc",
        "roper",
        "rug-of-smothering",
        "rust-monster",
        "saber-toothed-tiger",
        "sahuagin",
        "salamander",
        "satyr",
        "scorpion",
        "scout",
        "sea-hag",
        "sea-horse",
        "shadow",
        "shambling-mound",
        "shield-guardian",
        "shrieker",
        "silver-dragon-wyrmling",
        "skeleton",
        "solar",
        "specter",
        "spider",
        "spirit-naga",
        "sprite",
        "spy",
        "steam-mephit",
        "stirge",
        "stone-giant",
        "stone-golem",
        "storm-giant",
        "succubus-incubus",
        "swarm-of-bats",
        "swarm-of-beetles",
        "swarm-of-centipedes",
        "swarm-of-insects",
        "swarm-of-poisonous-snakes",
        "swarm-of-quippers",
        "swarm-of-rats",
        "swarm-of-ravens",
        "swarm-of-spiders",
        "swarm-of-wasps",
        "tarrasque",
        "thug",
        "tiger",
        "treant",
        "tribal-warrior",
        "triceratops",
        "troll",
        "tyrannosaurus-rex",
        "unicorn",
        "vampire-vampire",
        "vampire-spawn",
        "vampire-bat",
        "vampire-mist",
        "veteran",
        "violet-fungus",
        "vrock",
        "vulture",
        "warhorse",
        "warhorse-skeleton",
        "water-elemental",
        "weasel",
        "werebear-bear",
        "werebear-human",
        "werebear-hybrid",
        "wereboar-boar",
        "wereboar-human",
        "wereboar-hybrid",
        "wererat-human",
        "wererat-hybrid",
        "wererat-rat",
        "weretiger-human",
        "weretiger-hybrid",
        "weretiger-tiger",
        "werewolf-human",
        "werewolf-hybrid",
        "werewolf-wolf",
        "white-dragon-wyrmling",
        "wight",
        "will-o-wisp",
        "winter-wolf",
        "wolf",
        "worg",
        "wraith",
        "wyvern",
        "xorn",
        "young-black-dragon",
        "young-blue-dragon",
        "young-brass-dragon",
        "young-bronze-dragon",
        "young-copper-dragon",
        "young-gold-dragon",
        "young-green-dragon",
        "young-red-dragon",
        "young-silver-dragon",
        "young-white-dragon",
        "zombie"
    )

    @Test
    fun monsterRoute() = runTest {
        for (monster in monsters) {

            val mon = api.fetch<Monsters>(monster)
            println(
                """
                Name: ${mon.name}
                CR: ${mon.challenge_rating}
                Form: ${mon.forms?.map { it.name }}
                Attack : ${mon.actions?.map { it.name }}
                
                $mon
            """.trimIndent()
            )
        }
        println(api.query<Monsters>(""))
    }

    @Test
    fun monsterCRTest() = runTest {
        val mon = api.query<Monsters>("")
        //println(mon.size)
        println(mon)
    }


    @Nested
    inner class FailingTests {
        @Test
        fun monsterRoute() = runTest {
            println("FAIL TESTS")
            assertFails("Creature should never exist!") {
                api.fetch<Monsters>("A creature that does not exist")
            }
        }

    }
}